version: '3.6'
services:
  api:
    # image: php:7.4-apache
    build:
      context: api
    container_name: authentication_api
    restart: unless-stopped
    volumes:
      - "./api:/var/www/html"
    ports:
      - "8080:80"
    networks:
      - authentication-network
    depends_on:
      - authentication_dev_db

  front:
    tty: true
    restart: unless-stopped
    container_name: authentication_front
    build:
      context: frontend
      target: builder
    command: sh -c 'npm start'
    ports:
      - '4200:4200'
    volumes:
      - "./frontend:/app"
      - /app/node_modules
    networks:
      - authentication-network

  app_ionic:
    tty: true
    restart: unless-stopped
    container_name: authentication_ionic
    build:
      context: app-ionic
    command: sh -c 'npm start'
    ports:
      - '4201:4201'
    volumes:
      - "./app-ionic:/app"
      - /app/node_modules
    networks:
      - authentication-network

  authentication_dev_db:
    image: mysql:5.7
    container_name: authentication_dev_db
    restart: unless-stopped
    ports:
     - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: authentication_dev_db
    networks:
      - authentication-network

  authentication_adminer:
    image: adminer
    container_name: authentication_adminer
    restart: unless-stopped
    ports:
      - 8081:8080
    environment:
      ADMINER_PLUGINS: tables-filter tinymce
      PMA_HOST: authentication_dev_db
    depends_on:
      - authentication_dev_db
    networks:
      - authentication-network

  maildev:
    image: maildev/maildev
    ports:
      - "1080:80"
    networks:
      - authentication-network

volumes:
  portainerdata:
networks:
  authentication-network:
    name: authentication-network




# portainer:
  #   image: portainer/portainer
  #   container_name: authentication_portainer
  #   volumes:
  #     - "/var/run/docker.sock:/var/run/docker.sock"
  #     - "portainerdata:/data"
  #   ports:
  #     - "9000:9000"

  # ## BD GENERAL.
  # db:
  #   image: authentication_db
  #   container_name: authentication_db
  #   build:
  #     context: bd
  #     target: authentication_db
  #   command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
  #   restart: unless-stopped
  #   env_file:
  #     - .env
  #   ports:
  #     - 3307:3306
  #   volumes:
  #     - ../db-data:/var/lib/mysql
  #     - ./bd/init:/opt/bd
  #   networks:
  #     - authentication-network


  # API
  # api:
  #   image: wyveo/nginx-php-fpm:php74
  #   # build:
  #   #   context: api/infrastructure/Geekshubs-php-fpm74-nginx
  #   container_name: authentication_api
  #   restart: unless-stopped
  #   # labels:
  #   #   logging: "enabled"
  #   volumes:
  #     - "./api:/usr/share/nginx/html"
  #   ports:
  #     - "8080:80"
  #   networks:
  #     - authentication-network




  # authentication_php74:
  #   container_name: authentication_php74
  #   build:
  #     context: api/infraestructure/php74-fpm
  #     args:
  #       TIMEZONE: Europe/Madrid

  #   restart: always
  #   volumes:
  #     - ../app:/var/www/html
  #   user: 1000:1000
  #   networks:
  #     - authentication-network

  # authentication_apache:
  #   container_name: authentication_apache
  #   build:
  #     context: api/infraestructure/apache
  #     target: authentication_apache
  #   links:
  #     - authentication_php74
  #   restart: 'always'
  #   volumes:
  #     - ../app:/var/www/html
  #   ports:
  #     - "8080:80"
  #   networks:
  #   - authentication-network