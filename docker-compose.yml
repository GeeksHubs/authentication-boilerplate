version: '3.6'
services:
  authentication_api:
    image: 'geekshubs/geekshubs-php-fom80-nginx'
    # image: php:7.4-apache

    # build:
    #   context: api
    container_name: authentication_api
    restart: unless-stopped
    volumes:
      - "./api:/var/www"
    ports:
      - "8080:80"
    networks:
      - authentication-network
    depends_on:
      - authentication_dev_db
  test-deno:
    image: denoland/deno
    container_name: test-deno
    command: deno test --allow-all
    volumes:
      - "./test-end2end/api:/test"
  test-end2end:
    build:
      context: test-end2end/api
    container_name: test-end2end
    networks:
      - authentication-network
    volumes:
      - "./test-end2end/api:/test"
  # front:
  #   tty: true
  #   restart: unless-stopped
  #   container_name: authentication_front
  #   build:
  #     context: frontend
  #     target: builder
  #   command: sh -c 'npm start'
  #   ports:
  #     - '4200:4200'
  #   volumes:
  #     - "./frontend:/app"
  #     - /app/node_modules
  #   networks:
  #     - authentication-network


  authentication_dev_db:
    image: mysql:5.7
    container_name: authentication_dev_db
    restart: unless-stopped
    ports:
     - '3306:3306'
    volumes:
      - 'dbdata:/var/lib/mysql'
    environment:
      MYSQL_ROOT_PASSWORD: khj-aDSdlkh23423_123asd
      MYSQL_DATABASE: authentication_dev_db
    networks:
      - authentication-network

  authentication_adminer:
    image: adminer
    container_name: authentication_adminer
    restart: unless-stopped
    ports:
      - 8081:8080
    environment:
      ADMINER_PLUGINS: tables-filter tinymce
      PMA_HOST: authentication_dev_db
    depends_on:
      - authentication_dev_db
    networks:
      - authentication-network

  maildev:
    image: maildev/maildev
    ports:
      - "1080:80"
    networks:
      - authentication-network

volumes:
  dbdata:
networks:
  authentication-network:
    name: authentication-network
