import * as models from '../models';
import { HookTriggerContext, HookInterceptor } from 'hookpoint';
export declare function parseProtoImport(getLineReader: models.getHttpLineGenerator, context: models.ParserContext): Promise<models.HttpRegionParserResult>;
export declare class ProtoImportAction implements models.HttpRegionAction {
    private readonly protoDefinition;
    id: models.ActionType;
    constructor(protoDefinition: models.ProtoDefinition);
    process(context: models.ProtoProcessorContext): Promise<boolean>;
    private convertLoaderOptions;
}
declare type ExecuteInterceptor = HookInterceptor<[models.ProtoProcessorContext], boolean | void>;
export declare class ProtoDefinitionCreationInterceptor implements ExecuteInterceptor {
    private readonly protoDefinition;
    id: models.ActionType;
    constructor(protoDefinition: models.ProtoDefinition);
    beforeLoop(hookContext: HookTriggerContext<[models.ProtoProcessorContext], boolean | undefined>): Promise<boolean | undefined>;
}
export {};
