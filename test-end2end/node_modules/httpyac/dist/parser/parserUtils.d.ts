import * as models from '../models';
export declare type ParseLineMethod = (httpLine: models.HttpLine, context: models.ParserContext) => models.SymbolParserResult | false;
export interface ParseSubsequentLinesResult {
    nextLine?: number;
    parseResults: Array<models.SymbolParserResult>;
}
export declare function parseSubsequentLines(lineReader: models.HttpLineGenerator, requestLineParser: Array<ParseLineMethod>, context: models.ParserContext): ParseSubsequentLinesResult;
export declare function parseRequestHeaderFactory(headers: Record<string, unknown>): ParseLineMethod;
export declare function parseDefaultHeadersFactory(setHeaders: (headers: Record<string, unknown>, context: models.ProcessorContext) => void): ParseLineMethod;
export declare function parseUrlLineFactory(attachUrl: (url: string) => void): ParseLineMethod;
export declare function parseQueryLineFactory(attachUrl: (url: string) => void): ParseLineMethod;
export declare function parseComments(httpLine: models.HttpLine, context: models.ParserContext): models.SymbolParserResult | false;
