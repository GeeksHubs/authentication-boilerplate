import { LogLevel, LogHandler, ConsoleLogHandler } from '../models';
export declare class Logger implements ConsoleLogHandler {
    readonly options: {
        level?: LogLevel;
        logMethod?: (level: LogLevel, ...params: unknown[]) => void;
        onlyFailedTests?: boolean;
        noTrace?: boolean;
    };
    private collectCache;
    constructor(options: {
        level?: LogLevel;
        logMethod?: (level: LogLevel, ...params: unknown[]) => void;
        onlyFailedTests?: boolean;
        noTrace?: boolean;
    });
    collectMessages(): void;
    flush(): void;
    private writeLog;
    info(...params: unknown[]): void;
    log(...params: unknown[]): void;
    trace(...params: unknown[]): void;
    debug(...params: unknown[]): void;
    error(...params: unknown[]): void;
    warn(...params: unknown[]): void;
    logTest(result: boolean, message: string): void;
    clear(): void;
}
export declare const log: LogHandler;
