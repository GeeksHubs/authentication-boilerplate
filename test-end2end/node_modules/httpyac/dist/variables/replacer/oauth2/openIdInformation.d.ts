import * as models from '../../../models';
import { OpenIdConfiguration } from './openIdConfiguration';
export interface OpenIdInformation extends models.UserSession {
    time: number;
    config: OpenIdConfiguration;
    accessToken: string;
    expiresIn: number;
    timeSkew: number;
    refreshToken?: string;
    refreshExpiresIn?: number;
}
export interface OpenIdContext {
    httpClient: models.HttpClient;
}
export interface OpenIdSesssion extends Omit<models.UserSession, 'type'> {
    config: OpenIdConfiguration;
}
export declare function requestOpenIdInformation(request: models.HttpRequest | false, options: OpenIdSesssion, context: OpenIdContext): Promise<OpenIdInformation | false>;
export declare function toOpenIdInformation(jwtToken: unknown, time: number, session: OpenIdSesssion): OpenIdInformation | false;
export declare function isAuthToken(obj: unknown): obj is AuthToken;
interface AuthToken {
    access_token: string;
    expires_in: number;
    refresh_token?: string;
    refresh_expires_in?: number;
}
export {};
