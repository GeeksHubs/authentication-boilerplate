import * as models from '../models';
import { HookInterceptor, HookTriggerContext } from 'hookpoint';
export declare enum LoopMetaType {
    for = 0,
    forOf = 1,
    while = 2
}
export interface LoopMetaData {
    type: LoopMetaType;
    iterable?: string;
    variable?: string;
    counter?: number;
    expression?: string;
}
export declare class LoopMetaAction implements HookInterceptor<[models.ProcessorContext], boolean> {
    private readonly data;
    id: string;
    private iteration;
    name: string | undefined;
    index: number;
    request: models.Request | undefined;
    constructor(data: LoopMetaData);
    beforeTrigger(hookContext: HookTriggerContext<[models.ProcessorContext], boolean>): Promise<boolean>;
    process(context: models.ProcessorContext): Promise<boolean>;
    afterTrigger(hookContext: HookTriggerContext<[models.ProcessorContext], boolean>): Promise<boolean>;
    private setResponsesList;
    private iterate;
    private createHttpRegionClone;
}
